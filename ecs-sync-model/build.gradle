plugins {
    id 'library-publication' // buildSrc/src/main/groovy/library-publication.gradle
}

// TODO: All dependencies should be specified in $rootProjectDir/dependencies.toml
dependencies {
    implementation "org.slf4j:slf4j-api:1.7.32"
    implementation "org.springframework:spring-beans:5.3.10"
    implementation "org.springframework:spring-context:5.3.10"
    implementation "commons-cli:commons-cli:1.4"
    // jaxb was removed from Java 11 - jaxb dependencies are provided with Java 8
    implementation "javax.xml.bind:jaxb-api:2.3.1"
    implementation "org.eclipse.persistence:org.eclipse.persistence.moxy:2.7.9" // 3.x switches to javaee 9 - TODO: test this

    // jaxb was removed from Java 11 - jaxb dependencies are provided with Java 8
//    runtimeOnly "org.glassfish.jaxb:jaxb-runtime:2.3.1"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testRuntimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
}

test {
    useJUnitPlatform()
}

task jaxbFiles(type: Exec) {
    workingDir project.projectDir
    commandLine 'grep', '-lR', 'XmlRootElement', 'src/main/java'
    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

task schemagen(type: Exec, dependsOn: [jaxbFiles, compileJava]) {
    description "Generates an XML schema and puts it in ${rootProject.projectDir}/sample/model.xsd"
    doFirst {
        def argList = ['-d', "${sourceSets.main.output.classesDir}",
                '-cp', "${configurations.compile.asPath}${File.pathSeparatorChar}${sourceSets.main.output.classesDir}${File.pathSeparatorChar}src/main/java"]
        argList.addAll(jaxbFiles.output().split('\n'))
        args(argList as String[])
    }
    workingDir project.projectDir
    executable 'schemagen'
    ignoreExitValue true
    doLast {
        file("${sourceSets.main.output.classesDir}/schema1.xsd").renameTo(file("${rootProject.projectDir}/sample/model.xsd"))
    }
}

repositories {
    mavenCentral()
}