/*
 * Copyright 2013-2016 EMC Corporation. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 * http://www.apache.org/licenses/LICENSE-2.0.txt
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.slf4j:slf4j-api:1.7.12",
            "org.slf4j:slf4j-log4j12:1.7.12",
            "org.springframework:spring-beans:3.2.17.RELEASE",
            "org.springframework:spring-context:3.2.17.RELEASE",
            "commons-cli:commons-cli:1.3.1",
            "javax.ws.rs:jsr311-api:1.1.1"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    if (project.hasProperty('java7Lib')) {
        options.fork = true
        options.bootClasspath = new File(java7Lib).listFiles(
                [accept: { d, f -> f ==~ /.*\.jar/ }] as FilenameFilter
        ).join(File.pathSeparator)
    }
}

task jaxbFiles(type: Exec) {
    workingDir project.projectDir
    commandLine 'grep', '-lR', 'XmlRootElement', 'src/main/java'
    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

task schemagen(type: Exec, dependsOn: jaxbFiles) {
    doFirst {
        def argList = ['-cp', 'src/main/java']
        argList.addAll(jaxbFiles.output().split('\n'))
        args(argList as String[])
    }
    workingDir project.projectDir
    environment CLASSPATH: configurations.compile.asPath
    executable 'schemagen'
    ignoreExitValue true
}
