#!/bin/bash
#
# /etc/init.d/ecs-sync
# Subsystem file for "ecs-sync" service.
#
### BEGIN INIT INFO
# Provides: ecs-sync
# Required-Start: $local_fs $network
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: start and stop ecs-sync service
# Description: ECS-Sync 2.0+ server deamon
# chkconfig: 345 90 10
### END INIT INFO
export LANG=en_US.UTF-8
SERVICE_NAME=ecs-sync

INSTALL_DIR=/opt/emc/ecs-sync
LIB_DIR=$INSTALL_DIR/lib
LOG_DIR=/var/log/ecs-sync

PATH_TO_JAR=$LIB_DIR/$SERVICE_NAME.jar
PID_PATH_NAME=$LOG_DIR/$SERVICE_NAME.pid
PATH_TO_LOG=$LOG_DIR/$SERVICE_NAME.log
APP_USER=root
JAVA_OPTS="-server -Xmx12G -XX:+UseParallelGC"
DB_OPT="--db-connect-string 'jdbc:mysql://localhost:3306/ecs_sync?user=ecssync&password=ecs-sync-db&autoReconnect=true&characterEncoding=UTF-8'"

RUN_DIR=${INSTALL_DIR}

if [ "$(id -u)" != "0" ]; then
   echo "Please run as root" 1>&2
   exit 1
fi

SU_COMMAND="/bin/su -l"
if [ -x "/sbin/runuser" ]; then
        SU_COMMAND="/sbin/runuser -l"
fi

start() {
    echo "starting ${SERVICE_NAME} ..."
    if test -f ${PID_PATH_NAME} && ! ps -p $(cat ${PID_PATH_NAME}); then
        echo "Removing stale pidfile ..."
        rm ${PID_PATH_NAME}
    fi
    if [ ! -f ${PID_PATH_NAME} ]; then
        ${SU_COMMAND} ${APP_USER} -c bash <<EOF
cd ${RUN_DIR}
nohup java ${JAVA_OPTS} -jar ${PATH_TO_JAR} --rest-only ${DB_OPT} >> ${PATH_TO_LOG} 2>&1 &
PID=\$!
[ "\$?" = "0" ] || exit 1
echo \${PID} > ${PID_PATH_NAME}
EOF
        if [ "$?" = "0" ]; then
            echo "${SERVICE_NAME} started"
        else
            echo "${SERVICE_NAME} failed"
            exit 1
        fi
    else
        echo "${SERVICE_NAME} is already running"
    fi
}

stop() {
    if [ -f ${PID_PATH_NAME} ]; then
        PID=$(cat ${PID_PATH_NAME})
        echo "stopping ${SERVICE_NAME} ..."
        kill -9 ${PID}
        echo "${SERVICE_NAME} stopped"
        rm ${PID_PATH_NAME}
    else
        echo "${SERVICE_NAME} is not running"
    fi
}

status() {
    if [ -f ${PID_PATH_NAME} ] && ps -p $(cat ${PID_PATH_NAME}) > /dev/null 2>&1; then
        echo "${SERVICE_NAME} is running "\("pid $(cat ${PID_PATH_NAME})"\)
    else
        echo "${SERVICE_NAME} is not running"
        exit 1
    fi
}

case "$1" in
    start)
        start
        exit 0
    ;;
    stop)
        stop
        exit 0
    ;;
    reload|restart|force-reload)
        stop
        start
        exit 0
    ;;
    status)
        status
        exit 0
    ;;
    **)
        echo "Usage: $0 {start|stop|reload}" 1>&2
        exit 1
    ;;
esac
