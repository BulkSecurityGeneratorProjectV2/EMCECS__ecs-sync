<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  This is a sample configuration to encrypt an Atmos namespace in-place.
  It uses 8 threads, verifies data using MD5 checksums and tracks status of all objects in a database table.
  -->
<!--
  Note: this XML file uses a local schema file. if you want to use this file in a real sync, you will have to pair it
  with model.xsd in the same directory. another option is to remove the xmlns/xsi attributes from the root element.
-->
<syncConfig xmlns="http://www.emc.com/ecs/sync/model"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.emc.com/ecs/sync/model model.xsd">
    <options>
        <threadCount>8</threadCount>

        <!-- uncomment the following if you are *not* submitting to the ecs-sync service running on the OVA -->
        <!--
        <dbConnectString>jdbc:mysql://localhost:3306/ecs_sync?user=ecssync&amp;password=ecs-sync-db&amp;autoReconnect=true&amp;characterEncoding=UTF-8</dbConnectString>
        -->
        <dbTable>atmos_encryption</dbTable>
        <!-- comment above and uncomment below if you are *not* connecting to a mysql DB -->
        <!--
        <dbFile>atmos_encryption.db</dbFile>
        -->

        <!-- uncomment to send confirmation of each object transfer to the log (it is also sent to the database) -->
        <!--
        <logLevel>verbose</logLevel>
        -->
    </options>

    <source>
        <atmosConfig>
            <protocol>http</protocol>
            <hosts>host1</hosts><!-- just one host if using a load balancer -->
            <hosts>host2</hosts>
            <hosts>host3</hosts>
            <hosts>host4</hosts>
            <uid>subtenant/uid</uid>
            <secret>*******</secret>
            <path>/encrypt-test/</path>
        </atmosConfig>
    </source>

    <filters>
        <!-- The local cache plugin.. necessary so we can encrypt in-place -->
        <localCacheConfig>
            <localCacheRoot>/tmp/es-cache</localCacheRoot>
        </localCacheConfig>
        <!-- The decryption plugin -->
        <encryptionConfig>
            <encryptKeystore>store.jks</encryptKeystore>
            <encryptKeystorePass>CHANGE_ME</encryptKeystorePass>
            <encryptKeyAlias>KEY_ALIAS</encryptKeyAlias>
            <encryptForceStrong>true</encryptForceStrong>
            <!-- necessary for in-place encryption (otherwise target will assume object has not changed and ignore it) -->
            <encryptUpdateMtime>true</encryptUpdateMtime>
        </encryptionConfig>
    </filters>

    <target>
        <atmosConfig>
            <protocol>http</protocol>
            <hosts>host1</hosts><!-- just one host if using a load balancer -->
            <hosts>host2</hosts>
            <hosts>host3</hosts>
            <hosts>host4</hosts>
            <uid>subtenant/uid</uid>
            <secret>*******</secret>
            <path>/encrypt-test/</path>
        </atmosConfig>
    </target>
</syncConfig>
