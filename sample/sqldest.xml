<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- This sample Spring configuration file uses a Filesystem source and  -->
	<!-- a SQL target.                                                       -->

	<!-- This is the required 'root' bean that will bootstrap the operation -->
	<bean name="sync" class="com.emc.ecs.sync.EcsSync">
		<property name="source" ref="source"/>
		<property name="target" ref="target"/>

        <!-- database file -->
        <property name="dbService">
            <bean class="com.emc.ecs.sync.service.SqliteDbService">
                <constructor-arg value="files-to-blobs.db" />
            </bean>
        </property>

        <property name="syncThreadCount" value="8"/>
	</bean>

	<!-- The source plugin -->
	<bean name="source" class="com.emc.ecs.sync.source.FilesystemSource">
		<property name="rootFile" value="/Users/cwikj/synctest2/" />
		<property name="ignoreMetadata" value="true"/>
	</bean>
	
	<!-- The target plugin -->
	<bean name="target" class="com.emc.ecs.sync.target.SqlBlobTarget">
		<property name="dataSource" ref="dataSource"/>
		<property name="insertSql" value="insert into myblobs(myblob) values (?)"/>
	</bean>

    <!-- Here we show using a custom DataSource through Spring -->
    <bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="jdbc:mysql://localhost:7306/id_map"/>
        <property name="username" value="root"/>
        <property name="password" value="zimbra"/>
        <property name="maxActive" value="50"/>
        <property name="maxOpenPreparedStatements" value="100"/>
    </bean>
</beans>
